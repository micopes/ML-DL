방법 1: 어떤 샘플을 선택해서 데이터 셋의 20%정도를 테스트 세트로 사용

단점? : 실행할 때마다 데이터를 분할하는 기준이 달라짐
 해결책
• 처음 실행에서 테스트 세트를 저장하고 다음번 실행에서 이를 불러들여 사용함
• 항상 같은 난수 인덱스가 생성되도록 np.random.permutation()을 호출하기 전에 초깃값을 지정
• 샘플의 식별자를 사용하여 테스트 세트로 보낼지 말지 정함

=> 성능 향상을 확인할 수 없기 때문에 train set을 동일하게 두기 위함.

- 상관관계.
상관관계가 0에 가까운 값은 빼거나, 조합하여 상관관계가 있게 만들어주는 방법이 있음

- 누락값처리
1. dropna() : 해당 구역을 제거
2. drop() : 전체 특성을 삭제(attribute 삭제)
3. fillna() 어떤 값으로 채움( ex) 중간값, 평균값, 0 ...)

- 특성 스케일링
머신러닝 알고리즘은 입력 숫자 특성들의 스케일이 많이 다르면 잘 작동하지 않음
min-max 스케일링과 표준화를 사용
min-max scailing 
• 0~1 범위에 들도록 값을 이동하고 스케일을 조정
• 데이터에서 최소값을 뺀 후 최댓값과 최솟값의 차이로 나눔
• SciKit-Learn 에는 MinMaxScalar 변환기를 제공하며, feature_range 매개변수로 범위를 변경
표준화(standardization)
• 평균을 뺀 후 표준편차로 나누어 결과 분포의 분산이 1이 되도록 함
• 범위의 상한과 하한이 없어 신경망과 같은 알고리즘에서는 문제가 될 수 있음
• 이상치에 영향을 덜 받음
• SciKit-Learn 에는 StandardScalar 변환기를 제공함


